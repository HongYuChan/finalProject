<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.used.mapper.MemberMapper">

	<resultMap type="org.used.domain.MemberVO" id="memberMap">
		<id property="user_id" column="user_id" />
		<result property="id" column="id" />
		<result property="password" column="password" />
		<result property="nickname" column="nickname" />
		<result property="email" column="email" />
		<result property="phone_number" column="phone_number" />
		<result property="address" column="address" />
		<result property="evaluation" column="evaluation" />
		<result property="name" column="name" />
		<collection property="authList" resultMap="authMap">
		</collection>
	</resultMap>

	<resultMap type="org.used.domain.AuthVO" id="authMap">
		<result property="user_id" column="user_id" />
		<result property="auth" column="auth" />
	</resultMap>

	<select id="read" resultMap="memberMap">
		select
		a.user_id, id, password, enabled, nickname, email, phone_number, address,
		evaluation, name, b.auth
		from member_auth b
		left outer join member a on a.user_id = b.user_id
		where id = #{id}
	</select>

	<insert id="create" parameterType="org.used.domain.MemberVO">
		insert all
		into member(
		user_id,
		id,
		nickname,
		email,
		phone_number,
		address,
		name,
		password)
		values(
		SEQ_MEMBER.NEXTVAL,
		#{id},
		#{nickname},
		#{email},
		#{phone_number},
		#{address},
		#{name},
		#{password})
		
		into member_auth(
		user_id, 
		auth
		)values(
		SEQ_MEMBER.NEXTVAL, 
		'ROLE_USER'
		)select * from dual
	</insert>
	
	<select id="idCheck" resultType="int">
		select count(*) from member where id = #{id}
	</select>
	
	<select id="userIdSearch" resultType="String">
		select id from member where name = #{name} and phone_number = #{phone_number}
	</select>

</mapper>